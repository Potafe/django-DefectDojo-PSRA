# Generated by Django 5.0.8 on 2024-11-15 11:00

import multiselectfield.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dojo', '0218_system_settings_enforce_verified_status_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='jira_project',
            name='enabled',
        ),
        migrations.RemoveField(
            model_name='system_settings',
            name='enable_webhooks_notifications',
        ),
        migrations.RemoveField(
            model_name='system_settings',
            name='enforce_verified_status',
        ),
        migrations.RemoveField(
            model_name='system_settings',
            name='webhooks_notifications_timeout',
        ),
        migrations.AddField(
            model_name='finding',
            name='risk_assessed',
            field=models.BooleanField(default=False, help_text='Denotes if this finding has been assessed as per OWASP Risk Assessment.', verbose_name='Risk Assessed'),
        ),
        migrations.AddField(
            model_name='product',
            name='enable_risk_assessment',
            field=models.BooleanField(default=True, help_text='Allows risk asessment using OWASP Risk Assessment methodology'),
        ),
        migrations.AlterField(
            model_name='jira_project',
            name='push_all_issues',
            field=models.BooleanField(blank=True, default=False, help_text='Automatically maintain parity with JIRA. Always create and update JIRA tickets for findings in this Product.'),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='auto_close_engagement',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='close_engagement',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='code_review',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='engagement_added',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='jira_update',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), help_text='JIRA sync happens in the background, errors will be shown as notifications/alerts so make sure to subscribe', max_length=24, verbose_name='JIRA problems'),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='other',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='product_added',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='product_type_added',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='review_requested',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='risk_acceptance_expiration',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), help_text='Get notified of (upcoming) Risk Acceptance expiries', max_length=24, verbose_name='Risk Acceptance Expiration'),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='scan_added',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), help_text='Triggered whenever an (re-)import has been done that created/updated/closed findings.', max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='scan_added_empty',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=[], help_text='Triggered whenever an (re-)import has been done (even if that created/updated/closed no findings).', max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='sla_breach',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), help_text='Get notified of (upcoming) SLA breaches', max_length=24, verbose_name='SLA breach'),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='sla_breach_combined',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), help_text='Get notified of (upcoming) SLA breaches (a message per project)', max_length=24, verbose_name='SLA breach (combined)'),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='stale_engagement',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='test_added',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='upcoming_engagement',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.AlterField(
            model_name='notifications',
            name='user_mentioned',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('slack', 'slack'), ('msteams', 'msteams'), ('mail', 'mail'), ('alert', 'alert')], default=('alert', 'alert'), max_length=24),
        ),
        migrations.CreateModel(
            name='Risk_Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threat_types', multiselectfield.db.fields.MultiSelectField(choices=[('S', 'Spoofing'), ('T', 'Tampering'), ('R', 'Repudiation'), ('I', 'Information Disclosure'), ('D', 'Denial of Service'), ('E', 'Elevation of Privilege')], max_length=20)),
                ('mitigation_types', models.CharField(choices=[('D', 'D - By Design'), ('P', 'P - By Protective Measures'), ('M', 'M - By Process Control'), ('I', 'I - By Information for Safety'), ('N', 'N - No Mitigation (Risk Accepted)')], default='D', max_length=1)),
                ('name', models.CharField(max_length=300)),
                ('vector_string', models.CharField(blank=True, max_length=255, null=True)),
                ('vulnerability_cause', models.TextField(blank=True, null=True)),
                ('threat_description', models.TextField(blank=True, null=True)),
                ('risk_statement', models.TextField(blank=True, null=True)),
                ('related_hazard_item', models.TextField(blank=True, null=True)),
                ('rational_and_actions', models.TextField(blank=True, null=True)),
                ('mitigation_reference', models.CharField(blank=True, max_length=4000, null=True)),
                ('assessed_findings', models.ManyToManyField(related_name='risk_assessments', to='dojo.finding')),
            ],
            options={
                'verbose_name': 'Risk Assessment',
                'verbose_name_plural': 'Risk Assessments',
            },
        ),
        migrations.DeleteModel(
            name='Notification_Webhooks',
        ),
    ]
